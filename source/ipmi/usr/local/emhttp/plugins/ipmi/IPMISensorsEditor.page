Menu="IPMITools:4"
Title="Sensors Config"
Markdown="false"
---
<?
require_once '/usr/local/emhttp/plugins/ipmi/include/ipmi_options.php';

/* ipmi sensors config */
$loadcfg = isset($cfg['LOADCFG']) ? $cfg['LOADCFG'] : 'disable';

$config_file = "$plg_path/ipmi-sensors.config";
$ipmi_config = '';
if($ipmi || !empty($netopts)) {
    // Only get config if the current one is 1 hour old or more
    if(!file_exists($config_file) || (filesize($config_file) == 0 )) {
        $cmd = "ipmi-sensors-config --filename=$config_file --checkout $netopts";
        shell_exec($cmd);
    }
    $ipmi_config = file_get_contents($config_file);
}
?>
<link type="text/css" rel="stylesheet" href="/plugins/ipmi/js/CodeMirror/lib/codemirror.css">
<link type="text/css" rel="stylesheet" href="/plugins/ipmi/js/CodeMirror/addon/hint/show-hint.css">
<link type="text/css" rel="stylesheet" href="/plugins/ipmi/js/CodeMirror/addon/dialog/dialog.css">

<style type="text/css">
    .CodeMirror { border: 1px solid #eee; cursor: text; margin-top: 15px; margin-bottom: 10px; }
    .CodeMirror pre.CodeMirror-placeholder { color: #999; }
</style>

<div id="title" style="margin-top: -22px;">
    <span class="left"><img class="icon" src="/plugins/ipmi/icons/configeditor.png"> IPMI Sensors Configuration Editor</span>
    <span id="load-switch" class="status"><input type="checkbox" id="autoload-switch"></span>
</div>

<form id="autoload_form" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" id="autoload" name="LOADCFG" value="disable" />
    <input type="hidden" name="#file" value="ipmi/ipmi.cfg" />
    <input type="hidden" id="COMMAND" name="#command" value="" />
</form>

<blockquote class="inline_help">
    <p>IPMI Config Editor is used to get and set sensor configuration parameters, such as thresholds and sensor events.
    This configuration tool is for advanced IPMI users and generally not-required for IPMI to function.
    Since many fields involve decimal numbers, precision/floating point inaccuracies may occur when configuring new thresholds.
    The inaccuracies may not be apparent immediately.  It is recommend to verify their changes after configuring new thresholds.
    Some sensor configuration may be stored in volatile memory, so you may wish to veryify that new configurations exist after system reboots.
    If sensor configuration does not survive then check Load Config @ unRAID Start to load config when system reboots.</p>
    <p><b>Search Functions:</b></p>
    <dl>
    <dt>Ctrl-F / Cmd-F</dt>
    <dd>Start searching</dd>
    <dt>Ctrl-G / Cmd-G</dt>
    <dd>Find next</dd>
    <dt>Shift-Ctrl-G / Shift-Cmd-G</dt>
    <dd>Find previous</dd>
    <dt>Shift-Ctrl-F / Cmd-Option-F</dt>
    <dd>Replace</dd>
    <dt>Shift-Ctrl-R / Shift-Cmd-Option-F</dt>
    <dd>Replace all</dd>
    </dl>
</blockquote>

<form id="cfgform" method="POST">

<textarea id="editcfg" name="ipmicfg" placeholder="Copy &amp; Paste IPMI Configuration Here." autofocus><?= htmlspecialchars($ipmi_config); ?></textarea>
<input type="hidden" name="commit" value="1" />
<input type="hidden" name="sensors" value="1" />
<dl>
    <dt><input type="button" value="Revert" id="btnRevert"/ title="reset the stored IPMI config file to the config loaded on the BMC"></dt>
    <dd><input type="button" value="Save" id="btnSubmit" title="save IPMI configuration changes to the BMC" /><input type="button" value="Cancel" id="btnCancel" title="reset config to stored values" />
    <span><i class="fa fa-warning icon warning"></i>If edits do not survive reboot toggle Load Config Switch to load configuration at system boot</span>
    </dd>
</form>
</dl>

<blockquote class="inline_help">
    <p>The Revert button resets the stored IPMI config file to the config loaded on the BMC.
    The Save button saves IPMI configuration changes to the BMC.  The Cancel button resets config to stored values.
    </p>
</blockquote>

<script src="/plugins/ipmi/js/CodeMirror/lib/codemirror.js"></script>
<script src="/plugins/ipmi/js/CodeMirror/addon/dialog/dialog.js"></script>
<script src="/plugins/ipmi/js/CodeMirror/addon/display/placeholder.js"></script>
<script src="/plugins/ipmi/js/CodeMirror/addon/hint/show-hint.js"></script>
<script src="/plugins/ipmi/js/CodeMirror/mode/properties/properties.js"></script>
<script src="/plugins/ipmi/js/CodeMirror/addon/hint/anyword-hint.js"></script>
<script src="/plugins/ipmi/js/CodeMirror/addon/search/searchcursor.js"></script>
<script src="/plugins/ipmi/js/CodeMirror/addon/search/search.js"></script>

<script>
$(function(){
    //autoload switch
    $('#autoload-switch').switchButton({
        labels_placement: 'left',
        on_label: 'Load Config @ unRAID Start',
        off_label: 'Load Config @ unRAID Start',
        checked: ("<?=$loadcfg;?>" == 'enable')
    })
    .change(function () {
        setAutoLoad();
        $.post('/update.php', $('#autoload_form').serializeArray());
    });

    setAutoLoad();

    // save config and commit to bmc
    $('#btnSubmit').click(function () {
        editor.save();
        commitConfig();
    });

    // revert saved config file to bmc config
    $('#btnRevert').on('click',reloadConfig);

    $('#btnCancel').click(function() {
        $.cookie('one', 'tab1', { expires:null, path: '/'});
        location = '/Tools/IPMITools';
        location.reload();
    });

    /* editor for ipmi sensors configuration */
    var editor = CodeMirror.fromTextArea($('#editcfg')[0], {
        mode: 'properties',
        lineNumbers: true,
        gutters: ['CodeMirror-linenumbers'],
        extraKeys: {
            'Ctrl-Space': 'autocomplete'
        },
        hintOptions: {}
    });

    $('#tab4').click(function () {
        editor.refresh();
    });
});

/* IPMI Sensors Configuration functions */
function setAutoLoad() {
    if ($('#autoload-switch')[0].checked) {
        $('#autoload').val('enable');
    }else{
        $('#autoload').val('disable');
    }
}

function commitConfig() {
    $.post('/plugins/ipmi/include/ipmi_config.php', $('#cfgform').serializeArray(),function (data) {
        var Title = 'IPMI Sensors Configuration';

        if(data.success){
            swal({title:Title,text:'saved',type:'success',closeOnConfirm: true,},function() {
                location = '/Tools/IPMITools';
            });
        }

        if(data.error)
            swal({title:Title,text:data.error,type:'error'});

    }, 'json');
}

function reloadConfig() {
    $.post('/plugins/ipmi/include/ipmi_config.php', {ipmicfg:null, sensors:1}, function (data) {
        var Title = 'IPMI Sensors Configuration';

        if(data.success){
            swal({title:Title,text:'reloaded from bmc',type:'success',closeOnConfirm: true,},function() {
                location.reload(true);
            });
        }

        if(data.error)
            swal({title:Title,text:data.error,type:'error'});

    }, 'json');
}
</script>