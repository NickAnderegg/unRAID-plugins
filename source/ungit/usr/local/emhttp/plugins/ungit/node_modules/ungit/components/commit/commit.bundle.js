(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

var ko = require('knockout');
var components = require('ungit-components');
var navigation = require('ungit-navigation');
var programEvents = require('ungit-program-events');
var md5 = require('blueimp-md5');
var moment = require('moment');

components.register('commit', function(args) {
  return new CommitViewModel(args);
});

function CommitViewModel(args) {
  var self = this;
  this.repoPath = args.repoPath;
  this.sha1 = args.sha1;
  this.server = args.server;
  this.highlighted = args.highlighted;
  this.nodeIsMousehover = args.nodeIsMousehover;
  this.selected = args.selected;
  this.element = ko.observable();
  this.commitTime = ko.observable();
  this.authorTime = ko.observable();
  this.message = ko.observable();
  this.title = ko.observable();
  this.body = ko.observable();
  this.authorDate = ko.observable(0);
  this.authorDateFromNow = ko.observable();
  this.authorName = ko.observable();
  this.authorEmail = ko.observable();
  this.fileLineDiffs = ko.observable();
  this.numberOfAddedLines = ko.observable();
  this.numberOfRemovedLines = ko.observable();
  this.authorGravatar = ko.computed(function() { return md5(self.authorEmail()); });
  this.textDiffType = ko.observable('textdiff');
  this.wordWrap = ko.observable(false);

  this.showCommitDiff = ko.computed(function() {
    return self.fileLineDiffs() && self.fileLineDiffs().length > 0;
  });

  this.selectedDiffLeftPosition = ko.observable();
  this.diffStyle = ko.computed(function() {
    if (self.selected()) return { left: self.selectedDiffLeftPosition() + 'px', width: (window.innerWidth - 220) + 'px' };
    else return { left: '0px', width: self.element() ? ((self.element().clientWidth - 20) + 'px') : 'inherit' };
  });
}
CommitViewModel.prototype.updateNode = function(parentElement) {
  ko.renderTemplate('commit', this, {}, parentElement);
}
CommitViewModel.prototype.setData = function(args) {
  this.commitTime(moment(new Date(args.commitDate)));
  this.authorTime(moment(new Date(args.authorDate)));
  var message = args.message.split('\n');
  this.message(args.message);
  this.title(message[0]);
  this.body(message.slice(2).join('\n'));
  this.authorDate(moment(new Date(args.authorDate)));
  this.authorDateFromNow(this.authorDate().fromNow());
  this.authorName(args.authorName);
  this.authorEmail(args.authorEmail);
  this.numberOfAddedLines(args.fileLineDiffs.length > 0 ? args.fileLineDiffs[0][0] : 0);
  this.numberOfRemovedLines(args.fileLineDiffs.length > 0 ? args.fileLineDiffs[0][1] : 0);
  this.fileLineDiffs(args.fileLineDiffs);
  this.isInited = true;
  this.commitDiff = ko.observable(components.create('commitDiff',
    { fileLineDiffs: this.fileLineDiffs(),
      sha1: this.sha1,
      repoPath: this.repoPath,
      server: this.server,
      textDiffType: this.textDiffType,
      wordWrap: this.wordWrap }));
}
CommitViewModel.prototype.updateLastAuthorDateFromNow = function(deltaT) {
  this.lastUpdatedAuthorDateFromNow = this.lastUpdatedAuthorDateFromNow || 0;
  this.lastUpdatedAuthorDateFromNow += deltaT;
  if(this.lastUpdatedAuthorDateFromNow > 60 * 1000) {
    this.lastUpdatedAuthorDateFromNow = 0;
    this.authorDateFromNow(this.authorDate().fromNow());
  }
}
CommitViewModel.prototype.updateAnimationFrame = function(deltaT) {
  this.updateLastAuthorDateFromNow(deltaT);
}
CommitViewModel.prototype.textDiffTypeChange = function(type) {
  this.textDiffType(type);
}
CommitViewModel.prototype.stopClickPropagation = function(data, event) {
  event.stopImmediatePropagation();
}
CommitViewModel.prototype.toggleWordWrap = function(state) {
  this.wordWrap(state);
}

},{"blueimp-md5":"blueimp-md5","knockout":"knockout","moment":"moment","ungit-components":"ungit-components","ungit-navigation":"ungit-navigation","ungit-program-events":"ungit-program-events"}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJjb21wb25lbnRzL2NvbW1pdC9jb21taXQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJcbnZhciBrbyA9IHJlcXVpcmUoJ2tub2Nrb3V0Jyk7XG52YXIgY29tcG9uZW50cyA9IHJlcXVpcmUoJ3VuZ2l0LWNvbXBvbmVudHMnKTtcbnZhciBuYXZpZ2F0aW9uID0gcmVxdWlyZSgndW5naXQtbmF2aWdhdGlvbicpO1xudmFyIHByb2dyYW1FdmVudHMgPSByZXF1aXJlKCd1bmdpdC1wcm9ncmFtLWV2ZW50cycpO1xudmFyIG1kNSA9IHJlcXVpcmUoJ2JsdWVpbXAtbWQ1Jyk7XG52YXIgbW9tZW50ID0gcmVxdWlyZSgnbW9tZW50Jyk7XG5cbmNvbXBvbmVudHMucmVnaXN0ZXIoJ2NvbW1pdCcsIGZ1bmN0aW9uKGFyZ3MpIHtcbiAgcmV0dXJuIG5ldyBDb21taXRWaWV3TW9kZWwoYXJncyk7XG59KTtcblxuZnVuY3Rpb24gQ29tbWl0Vmlld01vZGVsKGFyZ3MpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuICB0aGlzLnJlcG9QYXRoID0gYXJncy5yZXBvUGF0aDtcbiAgdGhpcy5zaGExID0gYXJncy5zaGExO1xuICB0aGlzLnNlcnZlciA9IGFyZ3Muc2VydmVyO1xuICB0aGlzLmhpZ2hsaWdodGVkID0gYXJncy5oaWdobGlnaHRlZDtcbiAgdGhpcy5ub2RlSXNNb3VzZWhvdmVyID0gYXJncy5ub2RlSXNNb3VzZWhvdmVyO1xuICB0aGlzLnNlbGVjdGVkID0gYXJncy5zZWxlY3RlZDtcbiAgdGhpcy5lbGVtZW50ID0ga28ub2JzZXJ2YWJsZSgpO1xuICB0aGlzLmNvbW1pdFRpbWUgPSBrby5vYnNlcnZhYmxlKCk7XG4gIHRoaXMuYXV0aG9yVGltZSA9IGtvLm9ic2VydmFibGUoKTtcbiAgdGhpcy5tZXNzYWdlID0ga28ub2JzZXJ2YWJsZSgpO1xuICB0aGlzLnRpdGxlID0ga28ub2JzZXJ2YWJsZSgpO1xuICB0aGlzLmJvZHkgPSBrby5vYnNlcnZhYmxlKCk7XG4gIHRoaXMuYXV0aG9yRGF0ZSA9IGtvLm9ic2VydmFibGUoMCk7XG4gIHRoaXMuYXV0aG9yRGF0ZUZyb21Ob3cgPSBrby5vYnNlcnZhYmxlKCk7XG4gIHRoaXMuYXV0aG9yTmFtZSA9IGtvLm9ic2VydmFibGUoKTtcbiAgdGhpcy5hdXRob3JFbWFpbCA9IGtvLm9ic2VydmFibGUoKTtcbiAgdGhpcy5maWxlTGluZURpZmZzID0ga28ub2JzZXJ2YWJsZSgpO1xuICB0aGlzLm51bWJlck9mQWRkZWRMaW5lcyA9IGtvLm9ic2VydmFibGUoKTtcbiAgdGhpcy5udW1iZXJPZlJlbW92ZWRMaW5lcyA9IGtvLm9ic2VydmFibGUoKTtcbiAgdGhpcy5hdXRob3JHcmF2YXRhciA9IGtvLmNvbXB1dGVkKGZ1bmN0aW9uKCkgeyByZXR1cm4gbWQ1KHNlbGYuYXV0aG9yRW1haWwoKSk7IH0pO1xuICB0aGlzLnRleHREaWZmVHlwZSA9IGtvLm9ic2VydmFibGUoJ3RleHRkaWZmJyk7XG4gIHRoaXMud29yZFdyYXAgPSBrby5vYnNlcnZhYmxlKGZhbHNlKTtcblxuICB0aGlzLnNob3dDb21taXREaWZmID0ga28uY29tcHV0ZWQoZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHNlbGYuZmlsZUxpbmVEaWZmcygpICYmIHNlbGYuZmlsZUxpbmVEaWZmcygpLmxlbmd0aCA+IDA7XG4gIH0pO1xuXG4gIHRoaXMuc2VsZWN0ZWREaWZmTGVmdFBvc2l0aW9uID0ga28ub2JzZXJ2YWJsZSgpO1xuICB0aGlzLmRpZmZTdHlsZSA9IGtvLmNvbXB1dGVkKGZ1bmN0aW9uKCkge1xuICAgIGlmIChzZWxmLnNlbGVjdGVkKCkpIHJldHVybiB7IGxlZnQ6IHNlbGYuc2VsZWN0ZWREaWZmTGVmdFBvc2l0aW9uKCkgKyAncHgnLCB3aWR0aDogKHdpbmRvdy5pbm5lcldpZHRoIC0gMjIwKSArICdweCcgfTtcbiAgICBlbHNlIHJldHVybiB7IGxlZnQ6ICcwcHgnLCB3aWR0aDogc2VsZi5lbGVtZW50KCkgPyAoKHNlbGYuZWxlbWVudCgpLmNsaWVudFdpZHRoIC0gMjApICsgJ3B4JykgOiAnaW5oZXJpdCcgfTtcbiAgfSk7XG59XG5Db21taXRWaWV3TW9kZWwucHJvdG90eXBlLnVwZGF0ZU5vZGUgPSBmdW5jdGlvbihwYXJlbnRFbGVtZW50KSB7XG4gIGtvLnJlbmRlclRlbXBsYXRlKCdjb21taXQnLCB0aGlzLCB7fSwgcGFyZW50RWxlbWVudCk7XG59XG5Db21taXRWaWV3TW9kZWwucHJvdG90eXBlLnNldERhdGEgPSBmdW5jdGlvbihhcmdzKSB7XG4gIHRoaXMuY29tbWl0VGltZShtb21lbnQobmV3IERhdGUoYXJncy5jb21taXREYXRlKSkpO1xuICB0aGlzLmF1dGhvclRpbWUobW9tZW50KG5ldyBEYXRlKGFyZ3MuYXV0aG9yRGF0ZSkpKTtcbiAgdmFyIG1lc3NhZ2UgPSBhcmdzLm1lc3NhZ2Uuc3BsaXQoJ1xcbicpO1xuICB0aGlzLm1lc3NhZ2UoYXJncy5tZXNzYWdlKTtcbiAgdGhpcy50aXRsZShtZXNzYWdlWzBdKTtcbiAgdGhpcy5ib2R5KG1lc3NhZ2Uuc2xpY2UoMikuam9pbignXFxuJykpO1xuICB0aGlzLmF1dGhvckRhdGUobW9tZW50KG5ldyBEYXRlKGFyZ3MuYXV0aG9yRGF0ZSkpKTtcbiAgdGhpcy5hdXRob3JEYXRlRnJvbU5vdyh0aGlzLmF1dGhvckRhdGUoKS5mcm9tTm93KCkpO1xuICB0aGlzLmF1dGhvck5hbWUoYXJncy5hdXRob3JOYW1lKTtcbiAgdGhpcy5hdXRob3JFbWFpbChhcmdzLmF1dGhvckVtYWlsKTtcbiAgdGhpcy5udW1iZXJPZkFkZGVkTGluZXMoYXJncy5maWxlTGluZURpZmZzLmxlbmd0aCA+IDAgPyBhcmdzLmZpbGVMaW5lRGlmZnNbMF1bMF0gOiAwKTtcbiAgdGhpcy5udW1iZXJPZlJlbW92ZWRMaW5lcyhhcmdzLmZpbGVMaW5lRGlmZnMubGVuZ3RoID4gMCA/IGFyZ3MuZmlsZUxpbmVEaWZmc1swXVsxXSA6IDApO1xuICB0aGlzLmZpbGVMaW5lRGlmZnMoYXJncy5maWxlTGluZURpZmZzKTtcbiAgdGhpcy5pc0luaXRlZCA9IHRydWU7XG4gIHRoaXMuY29tbWl0RGlmZiA9IGtvLm9ic2VydmFibGUoY29tcG9uZW50cy5jcmVhdGUoJ2NvbW1pdERpZmYnLFxuICAgIHsgZmlsZUxpbmVEaWZmczogdGhpcy5maWxlTGluZURpZmZzKCksXG4gICAgICBzaGExOiB0aGlzLnNoYTEsXG4gICAgICByZXBvUGF0aDogdGhpcy5yZXBvUGF0aCxcbiAgICAgIHNlcnZlcjogdGhpcy5zZXJ2ZXIsXG4gICAgICB0ZXh0RGlmZlR5cGU6IHRoaXMudGV4dERpZmZUeXBlLFxuICAgICAgd29yZFdyYXA6IHRoaXMud29yZFdyYXAgfSkpO1xufVxuQ29tbWl0Vmlld01vZGVsLnByb3RvdHlwZS51cGRhdGVMYXN0QXV0aG9yRGF0ZUZyb21Ob3cgPSBmdW5jdGlvbihkZWx0YVQpIHtcbiAgdGhpcy5sYXN0VXBkYXRlZEF1dGhvckRhdGVGcm9tTm93ID0gdGhpcy5sYXN0VXBkYXRlZEF1dGhvckRhdGVGcm9tTm93IHx8IDA7XG4gIHRoaXMubGFzdFVwZGF0ZWRBdXRob3JEYXRlRnJvbU5vdyArPSBkZWx0YVQ7XG4gIGlmKHRoaXMubGFzdFVwZGF0ZWRBdXRob3JEYXRlRnJvbU5vdyA+IDYwICogMTAwMCkge1xuICAgIHRoaXMubGFzdFVwZGF0ZWRBdXRob3JEYXRlRnJvbU5vdyA9IDA7XG4gICAgdGhpcy5hdXRob3JEYXRlRnJvbU5vdyh0aGlzLmF1dGhvckRhdGUoKS5mcm9tTm93KCkpO1xuICB9XG59XG5Db21taXRWaWV3TW9kZWwucHJvdG90eXBlLnVwZGF0ZUFuaW1hdGlvbkZyYW1lID0gZnVuY3Rpb24oZGVsdGFUKSB7XG4gIHRoaXMudXBkYXRlTGFzdEF1dGhvckRhdGVGcm9tTm93KGRlbHRhVCk7XG59XG5Db21taXRWaWV3TW9kZWwucHJvdG90eXBlLnRleHREaWZmVHlwZUNoYW5nZSA9IGZ1bmN0aW9uKHR5cGUpIHtcbiAgdGhpcy50ZXh0RGlmZlR5cGUodHlwZSk7XG59XG5Db21taXRWaWV3TW9kZWwucHJvdG90eXBlLnN0b3BDbGlja1Byb3BhZ2F0aW9uID0gZnVuY3Rpb24oZGF0YSwgZXZlbnQpIHtcbiAgZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG59XG5Db21taXRWaWV3TW9kZWwucHJvdG90eXBlLnRvZ2dsZVdvcmRXcmFwID0gZnVuY3Rpb24oc3RhdGUpIHtcbiAgdGhpcy53b3JkV3JhcChzdGF0ZSk7XG59XG4iXX0=
